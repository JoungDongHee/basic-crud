name: Notify Discord on [API 변경] commits

on:
  push:
    branches:
      - main

jobs:
  notify-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check commits for [API 변경]
        id: check_api
        run: |
          echo "Checking commits for [API 변경]:"
          # 기본값
          echo "found=false" >> $GITHUB_ENV

          # 이벤트 페이로드의 commits 배열을 순회
          for i in $(seq 0 $(($(jq '.commits | length' "$GITHUB_EVENT_PATH") - 1))); do
            commit_message=$(jq -r ".commits[$i].message" "$GITHUB_EVENT_PATH")
            commit_id=$(jq -r ".commits[$i].id" "$GITHUB_EVENT_PATH")
            echo "Found commit: $commit_message"

            # 커밋 메시지가 "[API 변경]" 으로 시작하면 감지
            if [[ "$commit_message" =~ ^\[API\ 변경\] ]]; then
              echo "[API 변경] commit detected."
              echo "found=true" >> $GITHUB_ENV
              echo "commit_message=$commit_message" >> $GITHUB_ENV
              echo "commit_id=$commit_id" >> $GITHUB_ENV
              break
            fi
          done

      - name: Notify Discord
        # '[API 변경]' 커밋이 있을 때만 실행
        if: env.found == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          payload=$(jq -n --arg actor "${{ github.actor }}" \
                          --arg message "${{ env.commit_message }}" \
                          --arg commit_url "https://github.com/${{ github.repository }}/commit/${{ env.commit_id }}" \
            '{
              "embeds": [
                {
                  "title": "🔧 [API 변경] 커밋 감지",
                  "description": "\($actor)님이 API 스펙 변경을 반영했습니다.\n📝 \($message)\n🔗 [커밋 보러 가기](\($commit_url))",
                  "color": 15105570,
                  "timestamp": (now | todateiso8601)
                }
              ]
            }')

          curl -H "Content-Type: application/json" \
               -X POST \
               -d
