name: Notify Discord when DTO changed (on push)

on:
  push:
    branches:
      - main

jobs:
  notify-dto:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check commits for DTO file changes
        id: check_dto
        run: |
          echo "Scanning commits in event payload..."
          found=false
          commit_msg=""
          commit_id=""
          # event JSON에는 commits 배열이 있음 (push 이벤트)
          len=$(jq '.commits | length' "$GITHUB_EVENT_PATH")
          for i in $(seq 0 $(($len - 1))); do
            # added/modified arrays 합치기
            added=$(jq -r ".commits[$i].added[]" "$GITHUB_EVENT_PATH" 2>/dev/null || true)
            modified=$(jq -r ".commits[$i].modified[]" "$GITHUB_EVENT_PATH" 2>/dev/null || true)
            files=$(printf "%s\n%s\n" "$added" "$modified" | sed '/^$/d' || true)

            for f in $files; do
              # DTO 패턴: 패키지에 dto가 포함되거나 파일명에 Dto가 붙은 경우
              if echo "$f" | grep -E '(^|/)dto(/|$)|[A-Za-z0-9_]*Dto\.java$' >/dev/null; then
                echo "DTO change detected: $f"
                found=true
                commit_msg=$(jq -r ".commits[$i].message" "$GITHUB_EVENT_PATH")
                commit_id=$(jq -r ".commits[$i].id" "$GITHUB_EVENT_PATH")
                break 2
              fi
            done
          done

          if [ "$found" = true ]; then
            echo "found=true" >> $GITHUB_ENV
            echo "commit_message=$commit_msg" >> $GITHUB_ENV
            echo "commit_id=$commit_id" >> $GITHUB_ENV
          fi

      - name: Notify Discord (when DTO changed)
        if: env.found == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          actor="${{ github.actor }}"
          repo="${{ github.repository }}"
          commit="${{ env.commit_id }}"
          commit_msg="${{ env.commit_message }}"
          commit_url="https://github.com/${repo}/commit/${commit}"

          payload=$(jq -n --arg actor "$actor" \
                          --arg repo "$repo" \
                          --arg commit_msg "$commit_msg" \
                          --arg commit_url "$commit_url" \
                '{
                  "embeds": [
                    {
                      "title": "DTO 파일 변경 감지",
                      "description": "\($actor) 님이 DTO 관련 파일을 변경했습니다.\n\($commit_msg)\n[커밋 보기](\($commit_url))",
                      "color": 3447003,
                      "timestamp": now | todateiso8601
                    }
                  ]
                }')

          curl -H "Content-Type: application/json" -X POST -d "$payload" "$DISCORD_WEBHOOK"
